<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.com.timekey</groupId>
	<artifactId>service-client</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>timekey-service-client</name>
	<url>http://www.timekey.com.cn</url>
	<description>web service client for Timekey company.</description>

	<organization>
		<name>广州天健软件有限公司</name>
		<url>http://timekey.com.cn/</url>
	</organization>

	<!-- <licenses> <license> <name>The Apache Software License, Version 2.0</name> 
		<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url> <distribution>repo</distribution> 
		</license> </licenses> -->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.test.skip>false</maven.test.skip>
		<maven.test.failure.ignore>true</maven.test.failure.ignore>
	</properties>

  <dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.8.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>2.7.6</version>
		</dependency>
		<dependency>
			<groupId>cn.com.timekey</groupId>
			<artifactId>commons-core</artifactId>
			<version>1.0.1</version>
		</dependency>
  </dependencies>
  
  	<build>
		<defaultGoal>compile</defaultGoal>
		<finalName>timekey-${project.artifactId}-${project.version}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.pyx4me</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<obfuscate>true</obfuscate>
					<options>
						<!-- <option>-renamesourcefileattribute SourceFile</option> -->
						<!-- <injar>${project.build.finalName}.jar</injar> <outjar>${project.build.finalName}-small.jar</outjar> -->
						<option>-allowaccessmodification</option>
						<option>-overloadaggressively</option>
						<option>-repackageclasses ''</option>
						<option>-printseeds</option>
						<option>-keep public class * { public protected *; }</option>
						<option>-keepclassmembernames class * {
							java.lang.Class
							class$(java.lang.String);
							java.lang.Class class$(java.lang.String,
							boolean);
							}
						</option>
						<option>-keepclassmembers enum * {
							public static **[] values();
							public static ** valueOf(java.lang.String);
							}
						</option>
						<option>-keepclassmembers class * implements java.io.Serializable
							{
							static final long serialVersionUID;
							private static final
							java.io.ObjectStreamField[] serialPersistentFields;
							private void
							writeObject(java.io.ObjectOutputStream);
							private void
							readObject(java.io.ObjectInputStream);
							java.lang.Object
							writeReplace();
							java.lang.Object readResolve();
							}
						</option>
						<option>
							-dontskipnonpubliclibraryclasses
						</option>
						<option>
							-dontskipnonpubliclibraryclassmembers
						</option>
						<option>-keepattributes
							Exceptions,InnerClasses,Signature,Deprecated,
							SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>
						<option>-keepclasseswithmembers public class * {
							public static void
							main(java.lang.String[]);
							}</option>
					</options>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
						<lib>${java.home}/lib/jsse.jar</lib>
					</libs>
					<addMavenDescriptor>false</addMavenDescriptor>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>${maven.test.skip}</skip>
					<testFailureIgnore>${maven.test.failure.ignore}</testFailureIgnore>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
